# -*- coding: utf-8 -*-
# Generated by Django 1.9.6 on 2016-07-01 20:00
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AftSealOptions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seaguard', models.BooleanField(default=False, verbose_name='Seaguard')),
                ('linerCentering', models.CharField(choices=[('shaft', 'Shaft centered'), ('hub', 'Hub centered')], max_length=20, verbose_name='Liner centering')),
                ('oring', models.BooleanField(default=False, verbose_name='O-ring between liner and shaft')),
                ('distanceRing', models.BooleanField(default=False, verbose_name='Distance ring')),
                ('dirtBarrier', models.BooleanField(default=False, verbose_name='Dirt barrier > is the seal used in a dirty/sandy environment')),
                ('wireWinders', models.BooleanField(default=False, verbose_name='Wire winders')),
                ('netCutters', models.BooleanField(default=False, verbose_name='Net cutters')),
                ('hastelloy', models.BooleanField(default=False, verbose_name='Hastelloy springs')),
                ('hml', models.BooleanField(default=False, verbose_name='Hard metal layer to prevent liner wear (HML)')),
                ('air', models.BooleanField(default=False, verbose_name='Use an air type system to equalize the pressure and collect any leakage (Ventus/Athmos)')),
            ],
        ),
        migrations.CreateModel(
            name='Class',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=10)),
                ('className', models.CharField(max_length=100, verbose_name='Class')),
                ('certificateNo', models.CharField(max_length=100, verbose_name='Certificate No.')),
            ],
        ),
        migrations.CreateModel(
            name='environmentalOptions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vgp', models.BooleanField(default=False, verbose_name='Has to comply with VGP regulations')),
                ('oil', models.CharField(choices=[('mineral', 'Mineral oil'), ('eal', 'EAL oil (bio degradable oil)')], max_length=20, verbose_name='What kind of oil is used')),
                ('oilType', models.CharField(blank=True, max_length=100, null=True, verbose_name='What type of oil is used')),
                ('air', models.BooleanField(default=False, verbose_name='Use an air type system (Ventus/Athmos) to comply with VGP and reduce the pressure on the lip seals (only aft seal)')),
            ],
        ),
        migrations.CreateModel(
            name='FwdSealOptions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ocr', models.BooleanField(default=False, verbose_name='OCR ring')),
                ('fkm', models.BooleanField(default=False, verbose_name='Use FKM lip-seals')),
            ],
        ),
        migrations.CreateModel(
            name='sealApplication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('key', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='supremeAdvise',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cpp_fpp', models.CharField(blank=True, choices=[('fpp', 'Fixed pitch'), ('cpp', 'Controllable pitch')], max_length=10, null=True, verbose_name='Fixed or controllable pitch propellor')),
                ('pressure_oring', models.BooleanField(default=False, verbose_name='Pressure O-ring')),
                ('fwd_seal', models.BooleanField(default=False, verbose_name='Forward seal.')),
                ('aft_seal', models.BooleanField(default=False, verbose_name='Aft seal.')),
                ('aftSize', models.DecimalField(blank=True, decimal_places=0, max_digits=5, null=True, verbose_name='Aft shaft diameter (mm)')),
                ('fwdSize', models.DecimalField(blank=True, decimal_places=0, max_digits=5, null=True, verbose_name='Forward shaft diameter (mm)')),
                ('rpm', models.DecimalField(decimal_places=0, max_digits=4, verbose_name='RPM')),
                ('draught_shaft', models.DecimalField(decimal_places=1, max_digits=5, verbose_name='Draught to (aft) shaft centerline [m]')),
                ('aft', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sealadvisor2.AftSealOptions')),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sealadvisor2.sealApplication')),
                ('environment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sealadvisor2.environmentalOptions')),
                ('fwd', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sealadvisor2.FwdSealOptions')),
                ('typeApproval', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sealadvisor2.Class', verbose_name='Type approval required (specify which or leave blank)')),
            ],
        ),
    ]
